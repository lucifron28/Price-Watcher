# Generated by Django 5.2.5 on 2025-08-23 01:46

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category')),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('platform', models.CharField(choices=[('shopee', 'Shopee'), ('lazada', 'Lazada'), ('amazon', 'Amazon'), ('shein', 'Shein'), ('other', 'Other')], max_length=20)),
                ('base_url', models.URLField()),
                ('country', models.CharField(default='PH', max_length=2)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('platform', 'country')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('sku', models.CharField(blank=True, max_length=100)),
                ('store_product_id', models.CharField(max_length=100)),
                ('product_url', models.URLField()),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('image_url', models.URLField(blank=True)),
                ('target_price', models.DecimalField(blank=True, decimal_places=2, help_text='Alert when price drops below this value', max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_scraped', models.DateTimeField(blank=True, null=True)),
                ('scrape_frequency', models.IntegerField(default=60, help_text='Minutes between scrapes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracked_products', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.store')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PriceAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('below', 'Price Below'), ('above', 'Price Above'), ('change', 'Price Change %'), ('available', 'Back in Stock')], max_length=20)),
                ('threshold_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('webhook_url', models.URLField(blank=True)),
                ('triggered_count', models.IntegerField(default=0)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_alerts', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='products.product')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'product', 'alert_type')},
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_percentage', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_available', models.BooleanField(default=True)),
                ('stock_level', models.CharField(blank=True, max_length=50)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('review_count', models.IntegerField(blank=True, null=True)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('scrape_duration', models.FloatField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='products.product')),
            ],
            options={
                'ordering': ['-scraped_at'],
                'indexes': [models.Index(fields=['product', '-scraped_at'], name='products_pr_product_a27bdb_idx'), models.Index(fields=['scraped_at'], name='products_pr_scraped_bc4af0_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['user', 'is_active'], name='products_pr_user_id_cefa3e_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'last_scraped'], name='products_pr_store_i_80b949_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('store', 'store_product_id', 'user')},
        ),
    ]
